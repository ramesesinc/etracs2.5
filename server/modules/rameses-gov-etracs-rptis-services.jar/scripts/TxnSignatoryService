import com.rameses.annotations.*;
import com.rameses.common.*;
import com.rameses.util.*
import com.rameses.services.extended.*
import java.rmi.server.UID;

class TxnSignatoryService
{
	@ActiveDB('txnsignatory')
	def em


	@ProxyMethod
	public def lookup( params ) {
		params.searchtext = (params.searchtext ? params.searchtext : '') + '%'
		return em.getLookup(params)
	}


	@ProxyMethod
	public def init(entity, signatories){
		entity.signatories = []
		signatories.eachWithIndex{ signatory, idx ->
			entity.signatories << [
				refid : entity.objid,
				type : signatory,
				seqno : idx,
			]
		}
	}

	@ProxyMethod
	public def initSignatories(entity, signatories){
		entity.signatories = []
		signatories.eachWithIndex{ signatory, idx ->
			entity.signatories << [
				objid : 'S' + new UID(),
				refid : entity.objid,
				type : signatory,
				seqno : idx,
			]
		}
	}

	@ProxyMethod
	public void saveSignatories(signatories) {
		signatories?.each{
			em.save(it)
		}
	}

	@ProxyMethod
	public def createSignatories( signatories ) {
		signatories?.each{
			em.create(it)
		}
	}

	@ProxyMethod
	public def updateSignatories( signatories ) {
		signatories?.each{
			if (it.name) {
				em.updateSignatory(it)
			}
		}
	}

	
	@ProxyMethod
	public def getSignatories(entity){
		return em.getSignatories([refid:entity.objid])
	}


	@ProxyMethod
	public def deleteSignatories(entity){
		em.deleteSignatories([refid:entity.objid])
	}

}