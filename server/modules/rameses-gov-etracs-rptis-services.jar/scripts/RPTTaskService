import com.rameses.annotations.*
import com.rameses.common.*
import com.rameses.services.extended.*

class RPTTaskService 
{
	@ActiveDB('rpttask')
	def em 

    @Service('DateService')
    def dtSvc

    @Env
    def env 


    @ProxyMethod
    public def createTask( task ) {
        //close previous task first
        closeTask([objid:task.objid])

        task.taskid = 'T' + new java.rmi.server.UID()
        task.startdate = dtSvc.serverDate 
        task.createdby = getUserInfo()
        em.create(task)
        return task 
    }


    @ProxyMethod
    public def assignTask( task ) {
        task.assignedto = getUserInfo();
        em.update(task)
        return task
    }

    @ProxyMethod
    public void closeTask( task ) {
        task.enddate = dtSvc.serverDate 
        em.closeTask(task)
    }


    @ProxyMethod
    public def createNextUserTask( task ) {
        closeTask(task)
        task.taskid = 'T' + new java.rmi.server.UID()
        task.startdate = dtSvc.serverDate 
        task.createdby = getUserInfo()
        task.assignedto = getUserInfo()
        task.enddate = null
        em.create(task)
        return task
    }

    
    @ProxyMethod
    public def delete( task ) {
        em.deleteTask(task)    
    }

    def getUserInfo(){
        return [
            objid : env.USERID,
            name : env.FULLNAME,
            title : env.JOBTITLE,
        ]
    }


    @ProxyMethod
    public def findCurrentTask( objid ) {
        def task = em.findCurrentTask([objid:objid])
        if (!task) throw new Exception('Cannot open current task.')
        return task
    }
}
