import com.rameses.annotations.*;
import com.rameses.common.*
import com.rameses.services.extended.*
import com.rameses.util.*


class TCReportService  
{ 
	@ActiveDB('tcreport')
	def adb 

	@Env
	def env 
 
	@Service('DateService')
	def dtSvc

	@Service('ReportParameterService')
	def reportSvc


	@ProxyMethod 
	public def getCollectionByFund( params ) {
		params.fromdate = params.year + '-' + params.month.index + '-01'
		params.todate = dtSvc.format( 'yyyy-MM-dd', dtSvc.getMonthEndDate( java.sql.Date.valueOf(params.fromdate) ) ) 
		params.fundid = ( params.fund ?  params.fund.objid  : '%')

		def data = [:]

		data.info = [
			PREPAREDBY 		: env.FULLNAME,
			PREPAREDBYTITLE : env.JOBTITLE, 
			PERIOD			: 'AS OF ' + params.month.caption + ', ' + params.year,
		]
		
		data.items = adb.getCollectionByFund(params)

		if(! data.items) throw new Exception("No record(s) found.     ")
		return data;
	}	


	@ProxyMethod
	public def getFunds( ) {
		return adb.getFunds()
	}

	@ProxyMethod
	public def getSubFunds( objid ) {
		return adb.getSubFunds([objid: objid])
	}


	/************************************
		Form Controls 
	*************************************/	
	@ProxyMethod
	public def getFormControlList(  ) {
		return [
			[type:"integer", caption:'Year', name:'entity.year', required:true, preferredSize:'100,19', captionWidth:100 ],
            [type:"combo", caption:'Month', name:'entity.month', items:'months', expression:'#{item.caption}', preferredSize:'100,19', captionWidth:100, required:true],
            [type:"combo", caption:'Fund', name:'entity.fund', items:'funds', expression:'#{item.title}', preferredSize:'200,19', captionWidth:100 ],
        ]
	}


	
}
