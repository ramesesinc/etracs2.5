import com.rameses.annotations.*;
import com.rameses.common.*
import com.rameses.services.extended.*
import com.rameses.util.*


class AFSerialControlExportImportService  
{ 
	@ActiveDB('afserial_control_export_import')
	def adb 


	@ProxyMethod
	public def getAfSerialControlInfo(afserial){
		def params = [controlid:afserial.objid]
		def control = adb.findAfSerialControl(params)
		control.startseries = afserial.startseries 
		control.endseries = afserial.endseries
		control.stub = afserial.stub 
		control.inventory = adb.findAfSerialInventory(params)
		control.inventorydetails = adb.getAfSerialInventoryDetails(params)
		adb.updateAfSerialStateToRemote(params)
		return control
	}


	@ProxyMethod
	public void postImportedAfControl( control ) {
		checkExisting(control)

		adb.insertAfSerialControl( EntityUtil.mapToField(control) )
		adb.insertAfSerialInventory( EntityUtil.mapToField(control.inventory) )
		control.inventorydetails.each{
			adb.insertAfSerialInventoryDetails( EntityUtil.mapToField(it) )
		}
	}

	void checkExisting(control){
		def afc = adb.findAfSerialControl(control)
		if (afc)
			throw new Exception('Series has already been posted.')
	}


}
