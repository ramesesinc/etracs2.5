import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.services.extended.*;

public class BPApplicationLogInterceptor {

	@ActiveDB("bpapplication")
	def em;

	@Env
	def env;

	@Service("DateService")
	def dateSvc;

	private void log( def appid, def step, def action ) {
		def m = [:];
		m.objid = "BPLOG"+new UID();
		m.user = [ objid: env.USERID, name: env.USER ];
		m.txndate = dateSvc.serverDate; 
		m.appid = appid;
		m.step = step;
		m.action = action;
		em.create( m, "log" );
	}

	@After(pattern="BPApplicationService.create")
	public def logCreate(def evt) { 
		def o = evt.args[0];
		log( o.objid, "info", "create" );
	}

	@After(pattern="BPApplicationService.submitForApproval")
	public def logSubmitForAssessment(def evt) { 
		def o = evt.args[0];
		log( o.objid, "approval", "forward" );
	}

	@After(pattern="BPApplicationService.sendBackToAssessment")
	public def logSendBackToAssessment(def evt) { 
		def o = evt.args[0];
		log( o.objid, "assessment", "return" );
	}

	@After(pattern="BPApplicationService.submitForPayment")
	public def logSubmitForPayment(def evt) { 
		def o = evt.args[0];
		log( o.objid, "payment", "approve" );
	}

	@After(pattern="BPApplicationService.issueBIN")
	public def logIssueBIN(def evt) { 
		def o = evt.args[0];
		log( o.objid, "release", "issuebin" );
	}

	@After(pattern="BPApplicationService.issuePermit")
	public def logIssuePermit(def evt) { 
		def o = evt.args[0];
		log( o.objid, "release", "issuepermit" );
	}


}