import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.services.extended.*;

public class BusinessSearchForAmendmentService {

	@ActiveDB("business")
	def em;

	@Service("BusinessInfoService")
	def businessInfoSvc;

	@Service("DateService")
	def dateSvc;

	@ProxyMethod
	public def getList(o) {
		o.activeyear = dateSvc.serverYear;
		o.prevyear = o.activeyear - 1;	
		o._pagingKeys = 'b.objid';
		o._limit = 50;
		o.filter = '';
		if( o.bin ) {
			o.bin += "%";
			o.filter += ' AND b.bin LIKE $P{bin} ';
		}	
		if( o.ownername ) {
			o.ownername += "%";
			o.filter += ' AND b.owner_name LIKE $P{ownername} ';
		}	
		if( o.businessname ) {
			o.businessname += "%";
			o.filter += ' AND b.businessname LIKE $P{businessname} ';
		}	
		//if none specified, make sure no records will be returned
		if(!o.filter) {
			o.filter = " AND b.objid IS NULL ";
		}
		else {
			o.filter = " AND b.state IN ('ACTIVE','CAPTURED') " + o.filter;
		}
		def list = em.getListForAmendment(o);
		if(!list)
			throw new Exception("No records found");
		return list;	
	}

	@ProxyMethod
	public def open(o) {
		def yr = dateSvc.serverYear;
		
		//check if there is existing application running...
		/*
		def z = em.findExistingApplication([objid:o.objid, appyear:yr]);
		if(z)	{
			String s = "An application already exists for this business. Details as follows:\n";
			s += "Application No: " + z.appno + " status:" + z.state;
			throw new Exception( s );
		}
		*/
		
		def v = businessInfoSvc.open( o );
		//check if this application has late renewals
		if(v.activeyear < (yr-1) ) {
			String s = "This application was last renewed on " + v.activeyear + ". Please settle first the previous years balances";
			throw new Exception(s);
		}
		//check if there are balances
		//check if business has balance
		def chk = em.findIfBusinessHasBalance( v );		
		if(chk) {
			throw new Exception( "There are still unpaid obligation for this business. Please settle balance first.");
		}
		v.businessid = v.objid;
		v.objid = "APPRW"+new UID();
		v.apptype = 'AMEND';
		v.appyear = yr;
		v.txnmode = 'ONLINE';
		v.lobs.each { it.assessmenttype = 'RENEW'};
		v.assessmentinfos = [];
		v.redflags= [];
		return v;
	}

}