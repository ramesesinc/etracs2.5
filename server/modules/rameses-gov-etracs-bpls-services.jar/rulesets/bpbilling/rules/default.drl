package bpbilling;

import java.util.*;
import com.rameses.rules.common.*;
import java.math.*;

global RuleAction action;

rule "set-deadline-newbusiness"
	agenda-group "initial"
	salience -40
	no-loop
	when
		BPApplication($year: appyear)
		TF: TaxFeeAccount( qtr == 0 )
	then
		if( $year > 0) {
			TF.setDeadline( java.sql.Date.valueOf( ($year+1)+"-01-01") );
		}
end

rule "set-deadline"
	agenda-group "initial"
	salience -40
	no-loop
	when
		BillingDate( $date: date )
		QtrDeadline( $qtr:qtr, $deadline: deadline)
		TF: TaxFeeAccount( qtr == $qtr )
	then
		TF.setDeadline( $deadline );
		if( $date.after($deadline) ) {
			TF.setExpired(true);
		}
end

#######################################
# FULL PAYMENT
#######################################
rule "distribute-full-payment"
	agenda-group "apply-payment"
	when
		PayOption( type == "FULLYEAR" )
		Payment( amtpaid <= 0 )
		TF: TaxFeeAccount( $p: paypriority )
		not TaxFeeAccount( paypriority!=$p, paypriority < $p )
	then
		action.execute( "collect_full", TF, drools );
		retract( TF );
end

#######################################
# QTR PAYMENT
#######################################
rule "distribute-qtr-payment"
	agenda-group "apply-payment"
	when
		PayOption( type == "FULLQTR", $qtr: qtr )
		Payment( amtpaid <= 0 )
		TF: TaxFeeAccount( $p: paypriority, qtr <= $qtr )
		not TaxFeeAccount( paypriority!=$p, paypriority < $p, qtr <= $qtr )
	then
		action.execute( "collect_full", TF, drools );
		retract( TF );
end

#######################################
# PARTIAL PAYMENT (PARTIAL COMPLETE)
#######################################
rule "distribute-partial-payment"
	salience 100
	agenda-group "apply-payment"
	when
		TF: TaxFeeAccount( $p: paypriority, $total:total )
		not TaxFeeAccount( paypriority!=$p, paypriority < $p )
		P: Payment( $bal:balance >= $total )
	then
		action.execute( "collect_full", TF, drools );
		retract( TF );
		BigDecimal bd1 = new BigDecimal($bal+"");
        BigDecimal bd2 = new BigDecimal($total+"");		
		P.setBalance( bd1.subtract(bd2).doubleValue() );
		update(P);
end

#######################################
# PARTIAL PAYMENT (UNDERPAYMENT)
#######################################
rule "distribute-under-payment"
	salience 50
	agenda-group "apply-payment"
	when
		TF: TaxFeeAccount( $p: paypriority, $total:total )
		not TaxFeeAccount( paypriority!=$p, paypriority < $p )
		P: Payment( $bal:balance < $total, balance > 0 )
	then
		Map m = new HashMap();
		m.put("taxfeeaccount",TF);
		m.put("amtpaid", new BigDecimal($bal+"").doubleValue() );
		action.execute( "collect_partial", m, drools );
		retract( TF );
		P.setBalance( 0 );
		update(P);
end
