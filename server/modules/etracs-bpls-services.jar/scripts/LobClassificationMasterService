import com.rameses.annotations.*;
import com.rameses.common.*;
import java.rmi.server.UID

class LobClassificationMasterService{
	
	@PersistenceContext('main')	
	def em
	
	def SCHEMA_NAME = 'lobclassification'
	def STATE_DRAFT 	= 'DRAFT' 
	def STATE_APPROVED 	= 'APPROVED'
	
	@ProxyMethod 
	public def init( ) {
		return [:];
	} 
	
	@ProxyMethod
	public def create(entity) {
		entity.state = STATE_DRAFT
		em.validate( SCHEMA_NAME, entity )
		em.create( SCHEMA_NAME, entity)
		return entity;
	}
	
	@ProxyMethod
	public def update(entity) {
		def old = open(entity)

		if( old.state == STATE_APPROVED)
		throw new Exception('Document has already been approved.')

		em.validate( SCHEMA_NAME, entity )
		em.update( SCHEMA_NAME, entity )
		return entity
	}
	
	@ProxyMethod
	public def open(entity) {
		entity = em.read(SCHEMA_NAME, entity)
		
		if( ! entity )
		throw new Exception('Document does not exists or has already been deleted.')

		return entity 
	}
	
	@ProxyMethod
	public void delete(entity) {
		em.delete(SCHEMA_NAME, entity)
	}
	
	@ProxyMethod
	public def approve(entity) {
		def old = open(entity)
		
		if( old.state == STATE_APPROVED )
		throw new Exception('Document has already been approved.')

		entity.state = STATE_APPROVED
		return update( entity )
	}
}
