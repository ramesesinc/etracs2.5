import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;

public class BusinessCreditPostingInterceptor {

	@PersistenceContext("main")
	def em;
	
	@After(pattern="CashReceiptService.post", eval="#{result.collectiontype.handler == 'bpls'}")
	public void postBusiness(def evt) {
		def result = evt.result;
		em.create( "businessbilling:cashreceipt", result );
		result.billitems.each {
			it.objid = "BRC"+ new java.rmi.server.UID();
			it.receiptid = result.objid;	
			em.create( "businessbilling:credit", it );

			//update also each ref item balances.
			def g = em.read( "businessbilling:receivable", [objid:it.refid]);
			g.amtpaid +=  it.principalpaid;
			g.balance = g.amount - g.amtpaid;
			g.lastqtrpaid = it.qtr;
			em.update( "businessbilling:receivable", g );			
		}
		def bal = em.sqlContext.createNamedQuery("businessreceivable:getUnpaidBalance").setParameters(result).singleResult.balance;
		
		if(bal==0) {
			em.sqlContext.createNamedExecutor("businessreceivable:updateStateClosed").setParameters(result).execute();
		}
	}


}