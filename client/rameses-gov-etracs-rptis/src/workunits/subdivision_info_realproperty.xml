<?xml version="1.0" encoding="UTF-8"?>
<workunit>
    <invokers>
        <invoker type="subdivision:info" action="init" caption="Subdivided Land PINs" index="1"/>
        
        <invoker type="formActions" action="init" caption="Refresh" mnemonic="r" />
        <invoker type="formActions" action="add" caption="Add" mnemonic="a" visibleWhen="#{showActions == true}" depends="selectedItem" role="TAXMAPPER"/>
        <invoker type="formActions" action="open" caption="Open" mnemonic="o" />
        <invoker type="formActions" action="delete" caption="Delete" mnemonic="d" visibleWhen="#{showActions == true}" depends="selectedItem" role="TAXMAPPER" />
   </invokers>
   <code>

<![CDATA[
        
import com.rameses.rcp.annotations.* 
import com.rameses.rcp.common.* 
import com.rameses.osiris2.client.*
import com.rameses.osiris2.common.*
import com.rameses.gov.etracs.rpt.common.RPTUtil;

class SubdividedLandPinController
{
    @Binding
    def binding;
    
    @Service('RealPropertyService')
    def rpSvc;
    
    def svc;
    
    def entity;
    def selectedItem;
    
    String title = 'Subdivided Land PIN Information';
    def lands;
    
    void init(){
        lands = svc.getSubdividedLands(entity.objid);
        listHandler?.load();
    }
    
    
    def add(){
        return InvokerUtil.lookupOpener('realproperty:create', [
            entity      : createRealProperty(),
            allowEditSectionParcel : true,
            autoClose : true,
            viewOnly    : entity.taskaction.matches('assign.*'),
            
            oncreate : {
                def land = svc.initSubdividedLand(entity);
                land.itemno = lands.size() + 1;
                land.newpin = it.pin;
                land.newrpid = it.objid;
                land.rp = it;
                lands << svc.createSubdividedLand(land);
                listHandler.load();
                binding.refresh('count');
            }
        ])
    }
    
    def createRealProperty(){
        def rp = rpSvc.init();
        rp.barangay = entity.motherfaas.barangay;
        rp.barangayid = rp.barangay.objid;
        return rp;
    }
    
    
    def open(){
        if (!selectedItem ) throw new Exception('Select an item to open.');
        
        def viewonly = true;
        if ( entity.taskaction == null || ! entity.taskaction.matches('assign.*')){
            viewonly = false;
        }
        
        return InvokerUtil.lookupOpener('realproperty:open', [
            entity : [objid:selectedItem.newrpid],
            autoClose : true,
            allowCreate : false,
            viewOnly    : viewonly,
            
            onupdate : {
                selectedItem.newpin = it.pin;
                svc.updateSubdividedLand(selectedItem);
                listHandler.load();
            }
        ])
    }
    
    
    void delete(){
        if (!selectedItem ) throw new Exception('Select an item to delete.');
        if (MsgBox.confirm('Delete item?')) {
            svc.deleteSubdividedLand(selectedItem);
            lands.remove(selectedItem);
            listHandler.load();
            binding.refresh('count');
        }
    }
    
    
    def listHandler = [
        fetchList : { return lands },
        getRows   : { return 250 },
    ] as BasicListModel
    
    
    def getCount(){
        return lands?.size();
    }
    
    
    
    boolean getShowActions(){
        if (entity.taskaction && entity.taskaction.matches('assign.*')) return false;
        if (entity.state.matches('APPROVED')) return false;
        return true;
    }
}
       
]]>

   </code>
    
    <pages> 
        <page template="com.rameses.gov.etracs.rpt.subdivision.ui.SubdividedLandPage"/>
    </pages>
</workunit>


