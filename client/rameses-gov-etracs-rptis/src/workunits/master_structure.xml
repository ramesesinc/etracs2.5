<?xml version="1.0" encoding="UTF-8"?>
<workunit>
    <invokers>
        <invoker type="quick_launcher" code="ST01" action="init" caption="Structure" role="ASSESSOR_DATAMGMT" />
        <invoker type="structure:create" action="init" caption="Structure" role="ASSESSOR_DATAMGMT" />
        <invoker type="structure:open" action="open" caption="Structure" role="ASSESSOR_DATAMGMT" />
    </invokers>
        
    <code lang="groovy">
        import com.rameses.rcp.common.*;
        import com.rameses.rcp.annotations.*;
        import com.rameses.osiris2.client.*;
        import com.rameses.osiris2.common.*;
        
        public class StructureController  extends CRUDController 
        {
            String serviceName = 'StructureService'
            String entityName  = 'structure'
            String prefixId    = 'ST'
            
            def selectedItem
            
            Map createEntity(){
                return [materials : [] ]
            }
            
            def lookupMaterial = InvokerUtil.lookupOpener("material:lookup",[:]);
            
            def listHandler = [
                getRows    : { return 50; },
                getColumns : { 
                    return [
                        new Column(name:"material", caption:"Code*", minWidth:50, editable:true, type:"lookup", handler:lookupMaterial, expression:'#{item.material.code}'),
                        new Column(name:"material.name", caption:"Material", minWidth:200 ),
                    ];
                },
                fetchList    : { return entity.materials },
                createItem   : { return  [ structure_objid:entity.objid] },
                validate     : { li -> validateItem( li.item ) },
                onAddItem    : { item -> entity.materials.add( item ) },
                onRemoveItem : { item -> 
                    if( MsgBox.confirm("Delete selected item?") ) {
                        entity.materials.remove( item );
                        return true;
                    }
                    return false;
                },
            ] as EditorListModel;
            
            
            void validateItem( item ){
                if( entity.materials.find{it.material_objid == item.material.objid} ){
                    def msg = 'Duplicate Material is not allowed.'
                    MsgBox.err(msg)
                    throw new Exception(msg)
                }
                item.structure_objid = entity.objid
                item.material_objid = item.material.objid 
                item.material_code = item.material.code
                item.material_name = item.material.name 
            }
            
        }

    </code>
    
    <pages>
        <page template="com.rameses.gov.etracs.rpt.master.ui.StructurePage" />
    </pages>
</workunit>
