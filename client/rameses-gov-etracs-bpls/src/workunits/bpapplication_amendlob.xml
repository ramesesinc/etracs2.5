<workunit>
    <invokers>
            
        <invoker type="home.action" caption="Amend Line of Business"  action="start" target="window"  role="BUSINESSINFO"/>
        
    </invokers>
    
    <code>
         <![CDATA[    
        import com.rameses.rcp.annotations.*
        import com.rameses.rcp.common.*
        import com.rameses.osiris2.client.*
        import com.rameses.osiris2.common.*
        import java.rmi.server.*;
        import com.rameses.util.*;
        import com.rameses.gov.etracs.bpls.application.*;
        
        public class AmendLineBPApplication extends AbstractSearchBusiness {
        
            boolean hasLookup;
            boolean lobUpdated;
            def selectedLob;
            
            boolean ADD_LOB = true;
            boolean REMOVE_LOB = true;
            boolean RETIRE_LOB = true;
            
            String appType = "AMENDLOB";
            def entityName = "bpapplicationform";

            def openApplication() {
                if( selectedApplication?.state == 'CAPTURED' )
                    throw new Exception("App state CAPTURED not allowed");
                return super.openApplication();
            }
            
            def getAddLob() {
                return InvokerUtil.lookupOpener( "lob:lookup", [
                    onselect: { o->
                        if(entity.lobs.find{ it.lobid == o.objid }!=null) 
                            throw new Exception("Item already added");
                        def m = [:];
                        m.objid = "BPLOB"+new UID();
                        m.lobid = o.objid;
                        m.name = o.name;
                        m.classification = o.classification;
                        m.assessmenttype = "NEW";
                        entity.lobs << m; 
                        lobModel.reload();
                        lobUpdated = true;
                        binding.focus("lob");
                    }
                ]);
            }
            
            void removeLob() {
                if(!selectedLob) return;
                if(selectedLob.assessmenttype != "NEW" ) 
                    throw new Exception("Only new lines of business can be removed");
                entity.lobs.remove(selectedLob);
                lobUpdated = true;
            }

            void retireLOB() {
                if(!selectedLob) return;
                if(selectedLob.assessmenttype != "ACTIVE" ) 
                    throw new Exception("Only active lines of business can be retired");
                selectedLob.assessmenttype = 'RETIRE'    
                lobUpdated = true;
            }

            void unretireLOB() {
                if(!selectedLob) return;
                if(selectedLob.assessmenttype != "RETIRE" && selectedLob.assessmenttype != "RETIRED" ) 
                    throw new Exception("Only retired lines of business can be unretired");
                selectedLob.assessmenttype = 'ACTIVE'    
                lobUpdated = true;
            }
            
            def appInfoModel = [
                fetchList: { o-> 
                    return entity.appinfos; 
                }
            ] as BasicListModel;
            
            def lobModel = [
                fetchList: { o->
                    return entity.lobs;
                },
            ] as BasicListModel;
            
            void saveCreate() {
                if(!entity.appinfos)    
                    throw new Exception("There must be at least one business info");
                def lobs = entity.lobs.findAll{ it.assessmenttype != 'ACTIVE' } 
                if(!lobs) 
                    throw new Exception("Please specify at least one line of business to amend");
                entity.lobs = lobs;    
                appSvc.verifyLedger( entity );
                if( MsgBox.confirm("You are about to save this application. Proceed?")) {
                    entity = appSvc.create( entity );
                }
                else {
                    throw new BreakException();
                }
            }
            
        }
        ]]>
    </code>    
    
    <pageflow>
        <start>
            <transition to="search" name="create" action="init"/>
            <transition to="update-lob" name="open"/>
        </start>
        
        <page name="search" title="Search Business Name (For Amendment Line of Business)">
            <transition to="update-lob" caption="Next" name="next" mnemonic="N" immediate="false" action="openApplication"/>
        </page>
        
        <page name="update-lob" title="Amend Line of Business">
            <transition to="search" caption="Back" mnemonic="B" name="back" visibleWhen="#{OPENED_FROM_APP==false}"/>
            <transition to="save-success" caption="Submit" name="next" mnemonic="N"  action="saveCreate"/>
        </page>

        <page name="save-success" title="Save Success">
            <transition to="search" caption="Add Another" mnemonic="A" action="init"/>
        </page>

        <end/>
    </pageflow>
    
    <pages>
        <page name="search" template="com.rameses.gov.etracs.bpls.application.SearchLookupBusinessPage"/>
        <page name="update-lob" template="com.rameses.gov.etracs.bpls.application.SpecifyLOBPage"/>
        <page name="confirm" template="com.rameses.gov.etracs.bpls.application.ConfirmApplicationPage"/>
        <page name="save-success" template="com.rameses.gov.etracs.bpls.application.SuccessPage"/>
    </pages>
    
    
</workunit>