<workunit>
    <invokers>
        <invoker type="business:info" caption="General Info" index="-100" />

        <invoker type="extActions" action="editInfo" caption="Edit Info" mnemonic="S" index="-2"
            role="LICENSING"  permission="business.edit"
            visibleWhen="#{entity.state.matches('ACTIVE|CAPTURED')}"/>

        <invoker type="extActions" action="editLOB" caption="Edit LOB" mnemonic="S" index="-2"
            role="LICENSING"  permission="business.editlob"
            visibleWhen="#{entity.state.matches('ACTIVE|CAPTURED')}"/>

        <invoker type="extActions" action="issuePermit" caption="Issue Permit" mnemonic="S" index="10"
            role="LICENSING"  permission="permit.issue"
            visibleWhen="#{entity.state=='ACTIVE' &amp;&amp; entity.permit?.objid == null}"/>

        <invoker type="extActions" action="printPermit" caption="Print Permit" index="10"
            role="LICENSING"  permission="permit.print" 
            visibleWhen="#{entity.state=='ACTIVE' &amp;&amp; entity.permit?.objid!=null}" />

        <invoker type="extActions" action="reissuePermit" caption="Reissue Permit" mnemonic="S" index="10"
            role="LICENSING" permission="permit.reissue"
            visibleWhen="#{entity.state=='ACTIVE' &amp;&amp; entity.permit?.objid != null}"/>
            
        <invoker type="extActions" action="rebuildPermit" caption="Rebuild Permit" mnemonic="S" index="9"
            role="LICENSING" permission="permit.rebuild"
            visibleWhen="#{entity.permit?.objid != null}" />
    </invokers>
    
    <code>
        <![CDATA[    
        import com.rameses.rcp.annotations.*
        import com.rameses.rcp.common.*
        import com.rameses.osiris2.client.*
        import com.rameses.osiris2.common.*
        import java.rmi.server.*
        import com.rameses.gov.etracs.bpls.business.*;
        
        class  BusinessGeneralInfoController  {
        
            @Service("BusinessInfoService")
            def svc;
            
            @Service("BusinessPermitService")
            def permitSvc;
        
            @Binding
            def binding;
            
            String title = "General Info";
            String entityName = "businessinfo:generalinfo";
            
            def entity;
            
            def lobModel = [
                fetchList: { o->
                    if( !entity.lobs) {
                        entity.lobs = svc.getLobs( [objid:entity.objid] );
                        return entity.lobs;
                    }    
                }
            ] as BasicListModel;
            
            
            def issuePermit() {
                if( entity.permit ) {
                    throw new Exception("Permit already exists!");
                }
                else {
                    def h = { o->
                        entity.permit = o;
                        def op = InvokerUtil.lookupOpener( "businesspermit:print" , [entity:o] );
                        op.target = 'self';
                        binding.fireNavigation( op );
                    }
                    def p = [businessid: entity.objid];
                    return Inv.lookupOpener("business:issuepermit", [handler:h, entity: p  ]);
                }
            }
            
            def printPermit() {
                return InvokerUtil.lookupOpener( "businesspermit:print" , [entity:entity.permit] );
            }
            
            def rebuildPermit() {
                if( MsgBox.confirm("This will replace existing data with the latest business information. Proceed?")) {
                    permitSvc.rebuildPermit( entity.permit );
                    MsgBox.alert("Rebuild successful");
                }
            }
            
            def reissuePermit() {
                if( MsgBox.confirm("You are about to supersede existing permit. Proceed?")) {
                    def m = [businessid: entity.objid];
                    m.permittype = entity.permit.permittype;
                    def p = permitSvc.reissuePermit( m );
                    binding.refresh();
                    return InvokerUtil.lookupOpener( "businesspermit:print" , [entity:p] );
                }
            }
            
            def editInfo() {
                def h = { o->
                    svc.updateBusinessInfo( o );
                    binding.refresh();
                }
                return InvokerUtil.lookupOpener( "business:editinfo", [entity: entity, handler: h ] );
            }
            
            def editLOB() {
                return InvokerUtil.lookupOpener("businessinfo:editlob", [lobs:entity.lobs, 
                    handler:{ lobs->
                        entity.lobs = lobs;
                        svc.updateLobs(entity);
                        entity.lobs = null;
                        lobModel.reload();
                    }
                ]);
            }
            
            
        }
        ]]>
    </code>

    
    <pages>
        <page  template="com.rameses.gov.etracs.bpls.business.BusinessGeneralInfo"/>
    </pages>
    
</workunit>