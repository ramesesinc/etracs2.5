<workunit>
    <invokers>
        <invoker type="bpapplication:info" caption="Add Information" action="start"/>
    </invokers>
    
    <code>
        <![CDATA[    
        import com.rameses.rcp.annotations.*
        import com.rameses.rcp.common.*
        import com.rameses.osiris2.client.*
        import com.rameses.osiris2.common.*
        import com.rameses.gov.etracs.bpls.application.*;
        
        class BusinessInfoController  {
        
            @Service("BPAssessmentService")
            def service;
            
            @Binding
            def binding;
        
            def entity;
            def formInfos = [];
            def infos = [];
            boolean completed;
            def handler;
            def query = [:];
            
            void start() {
                query.putAll( entity );
                query.infos = [];
                query.taxfees = [];
                query.requirements = [];
                completed = false;
                callRule();
            }

            def sortInfos(sinfos) {
                return sinfos.findAll{it.lob?.objid==null} + sinfos.findAll{ it.lob?.objid!=null }.sort{ it.lob.name };
            }
            
            def findValue( info ) {
                if(info.lob?.objid!=null) {
                    def filter = entity.infos.findAll{ it.lob?.objid!=null };
                    def m = filter.find{ it.lob.objid==info.lob.objid && it.attribute.objid == info.attribute.objid };
                    if(m) return m.value;
                }
                else {
                    def filter = entity.infos.findAll{ it.lob?.objid==null };
                    def m = filter.find{ it.attribute.objid == info.attribute.objid };
                    if(m) {
                        return m.value;
                    }    
                }
                return null;
            }
            
            //return true if there is still more info, false if none.
            boolean callRule() {
                infos.clear();
                def result = service.execute(query);
                //phase 0 is the looping phase.  
                if( result.phase > 1 ) {
                    query.infos.addAll(result.infos);
                    query.requirements = result.requirements;
                    infos.clear();
                    return false;
                }
                else {
                    //check if there is already values for this info
                    result.infos.each {
                        it.value = findValue(it);
                    }
                    infos.addAll( result.infos );
                    query.infos.addAll(infos);
                    buildFormInfos();
                    return true;
                }
            }

            def doNext() {
                boolean test = callRule();
                if( !test ) {
                    sortInfos( query.infos );
                    handler(query.infos, query.requirements);
                    return "_close";
                }
                else {
                    return null;
                }
            }
            
            def buildFormInfos() {
                formInfos.clear();
                infos = sortInfos( infos );
                infos.each {x->
                    def i = [
                        type:x.attribute.datatype, 
                        caption:x.attribute.caption, 
                        categoryid:x.lob?.objid, 
                        name:x.attribute.name, 
                        bean: x,
                        properties: [:],
                        value: x.value
                    ];
                    //fix the datatype
                    x.datatype = x.attribute.datatype;
                    if(x.datatype.indexOf("_")>0) {
                        x.datatype = x.datatype.substring(0, x.datatype.indexOf("_"));
                    }
                    if(i.type == "boolean") {
                        i.type = "subform";
                        i.handler = "bpapplication:yesno";
                        i.properties = [item:x];
                    }
                    else if(i.type == "string_array") {
                        i.type = "combo";
                        i.itemsObject = x.attribute.arrayvalues;
                    }
                    formInfos << i;
                }
             }
             
            def formPanel = [
                getCategory: { lobid->
                    if(!lobid) return "";
                    return query.lobs.find{ it.lobid == lobid }?.name
                },
                updateBean: {name,value,item->
                    item.bean.value = value;
                },
                getControlList: {
                    return formInfos;
                }
            ] as FormPanelModel;
   
        }
        ]]>
        
    </code>
    
    <pages>
        <page name="initial" template="com.rameses.gov.etracs.bpls.application.AddInfoPage"/>
    </pages>
    
</workunit>